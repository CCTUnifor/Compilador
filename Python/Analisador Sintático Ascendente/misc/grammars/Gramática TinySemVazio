N = {Programa,decl-sequencia,declaracao,cond-decl,repet-decl,atrib-decl,leit-decl,escr-decl,exp,comp-op,exp-simples,soma,termo,mult,fator}
Sigma = {;,if,then,else,end,repeat,until,:=,ide,read,write,<,=,+,-,*,/,(,),num}
S = {Programa}
P = {
    Programa -> decl-sequencia

    decl-sequencia -> declaracao ; declaracao | declaracao

    declaracao -> cond-decl | repet-decl | atrib-decl | leit-decl | escr-decl 

    cond-decl -> if exp then decl-sequencia end

    repet-decl -> repeat decl-sequencia until exp

    atrib-decl -> ide := exp

    leit-decl -> read ide

    escr-decl -> write exp

    exp -> exp-simples comp-op exp-simples | exp-simples

    comp-op -> < | =

    exp-simples -> termo soma termo | termo

    soma -> + | -

    termo -> fator mult fator | fator

    mult -> * | /

    fator -> ( exp ) | num | ide
}