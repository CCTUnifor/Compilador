
############################## # Analisador Sintatico Descendente Tabular ##############################


############################## Grammar ##############################

PROGRAMA        -> DECL-SEQUENCIA
DECL-SEQUENCIA  -> DECLARACAO DECL-SEQUENCIA'
DECL-SEQUENCIA' -> ; DECLARACAO DECL-SEQUENCIA' | ε
DECLARACAO      -> COND-DECL | REPET-DECL | ATRIB-DECL | LEIT-DECL | ESCR-DECL 
COND-DECL       -> if EXP then DECL-SEQUENCIA end
REPET-DECL      -> repeat DECL-SEQUENCIA until EXP
ATRIB-DECL      -> ide := EXP
LEIT-DECL       -> read ide
ESCR-DECL       -> write EXP
EXP             -> EXP-SIMPLES X'
X'               -> COMP-OP EXP-SIMPLES | ε
COMP-OP         -> < | =
EXP-SIMPLES     -> TERMO EXP-SIMPLES'
EXP-SIMPLES'    -> SOMA TERMO EXP-SIMPLES' | ε
SOMA            -> + | -
TERMO           -> FATOR TERMO'
TERMO'          -> MULT FATOR TERMO' | ε
MULT            -> * | /
FATOR           -> ( EXP ) | num | ide

############################## Input ##############################

read x ;
if ( 0 < x ) then
    fact := 1 ;
    repeat
        fact := fact * x ;
        x := x - 1 
    until x = 0 ;
    write fact
end

############################## Firsts ##############################

first(PROGRAMA) => [if, repeat, ide, read, write]
first(DECL-SEQUENCIA) => [if, repeat, ide, read, write]
first(DECL-SEQUENCIA') => [;, ε]
first(DECLARACAO) => [if, repeat, ide, read, write]
first(COND-DECL) => [if]
first(REPET-DECL) => [repeat]
first(ATRIB-DECL) => [ide]
first(LEIT-DECL) => [read]
first(ESCR-DECL) => [write]
first(EXP) => [(, num, ide]
first(X') => [<, =, ε]
first(COMP-OP) => [<, =]
first(EXP-SIMPLES) => [(, num, ide]
first(EXP-SIMPLES') => [+, -, ε]
first(SOMA) => [+, -]
first(TERMO) => [(, num, ide]
first(TERMO') => [*, /, ε]
first(MULT) => [*, /]
first(FATOR) => [(, num, ide]



############################## Follows ##############################

follow(PROGRAMA) => [$]
follow(DECL-SEQUENCIA) => []
follow(DECL-SEQUENCIA') => []
follow(DECLARACAO) => []
follow(COND-DECL) => []
follow(REPET-DECL) => []
follow(ATRIB-DECL) => []
follow(LEIT-DECL) => []
follow(ESCR-DECL) => []
follow(EXP) => []
follow(X') => []
follow(COMP-OP) => []
follow(EXP-SIMPLES) => []
follow(EXP-SIMPLES') => []
follow(SOMA) => []
follow(TERMO) => []
follow(TERMO') => []
follow(MULT) => []
follow(FATOR) => []


