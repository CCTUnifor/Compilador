PROGRAMA -> PROGRAM VARS-DECL BEGIN DECL-SEQUENCIA END
VARS-DECL -> VAR ide : INTEGER ; VARS-DECL | ε
DECL-SEQUENCIA -> DECLARACAO DECL-SEQUENCIA'
DECL-SEQUENCIA'-> ; DECLARACAO DECL-SEQUENCIA'| ε
DECLARACAO -> COND-DECL | REPET-DECL | WHILE-DECL | ATRIB-DECL | LEIT-DECL | ESCR-DECL 
COND-DECL -> IF EXP THEN DECL-SEQUENCIA END
REPET-DECL -> REPEAT BEGIN DECL-SEQUENCIA END UNTIL EXP
WHILE-DECL -> WHILE EXP DO BEGIN DECL-SEQUENCIA END
ATRIB-DECL -> ide := EXP
LEIT-DECL -> READ ide
ESCR-DECL -> WRITE EXP
EXP -> EXP-SIMPLES X
X -> COMP-OP EXP-SIMPLES | ε
COMP-OP -> < | > | = | != | >= | <=
EXP-SIMPLES -> TERMO EXP-SIMPLES'
EXP-SIMPLES'-> SOMA TERMO EXP-SIMPLES' | ε
SOMA -> + | -
TERMO -> FATOR TERMO'
TERMO'-> MULT FATOR TERMO' | ε
MULT -> * | /
FATOR -> ( EXP ) | num | ide