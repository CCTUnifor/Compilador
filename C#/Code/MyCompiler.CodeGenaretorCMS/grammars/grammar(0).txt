PROGRAMA -> PROGRAM VARS-DECL BEGIN DECL-SEQUENCIA END
VARS-DECL -> VAR ide : INTEGER ; VARS-DECL | ε
DECL-SEQUENCIA -> DECLARACAO DECL-SEQUENCIA'
DECL-SEQUENCIA'-> ; DECLARACAO DECL-SEQUENCIA'| ε
DECLARACAO -> COND-STATMENT | REPEAT-STATMENT | WHILE-STATMENT | ATRIB-STATMENT | READ-STATMENT | WRITE-STATMENT 
COND-DECL -> IF EXP THEN DECL-SEQUENCIA END
REPEAT-STATMENT -> REPEAT BEGIN DECL-SEQUENCIA END UNTIL EXP
WHILE-STATMENT -> WHILE EXP DO BEGIN DECL-SEQUENCIA END
ATRIB-STATMENT -> ide := EXP
READ-STATMENT -> READ ( ide )
WRITE-STATMENT -> WRITE ( EXP )
EXP -> EXP-SIMPLES X
X -> COMP-OP EXP-SIMPLES | ε
COMP-OP -> < | > | = | != | >= | <=
EXP-SIMPLES -> TERMO EXP-SIMPLES'
EXP-SIMPLES'-> SOMA TERMO EXP-SIMPLES' | ε
SOMA -> + | -
TERMO -> FATOR TERMO'
TERMO'-> MULT FATOR TERMO' | ε
MULT -> * | /
FATOR -> ( EXP ) | num | ide